#include <SoftwareSerial.h>  //MP3シリアル転送用
#include <DFPlayer_Mini_Mp3.h> //MP3再生用
#include <avr/pgmspace.h>      //ROMへのデータ退避用
#include <OneWire.h>          //温度センサーDS18B20制御用
#include <DallasTemperature.h>//温度センサーDS18B20制御用

byte val=0, aON=0 ,aOFF=0;

SoftwareSerial mySerial(11, 12); // MP3シリアルRX, TX
int output = 2;     //IR制御用ピン
#define ONE_WIRE_BUS 10 // 温度センサーのピン定義 ★5 KΩでプルアップしないと動作しないことがある★
// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);
// Pass our oneWire reference to Dallas Temperature.
DallasTemperature sensors(&oneWire);

//エアコンIRデータ
const PROGMEM int aircon_on[] =  {2981,2000,0,2942,334,161,44,126,41,44,38,40,43,40,44,39,44,39,46,36,44,40,44,39,44,39,43,40,43,39,44,127,40,42,41,40,44,40,42,40,42,40,46,40,40,40,43,39,46,38,45,40,40,41,43,39,43,39,44,40,43,40,44,39,43,40,43,124,45,38,43,123,46,122,43,124,46,123,41,126,40,123,45,39,43,124,47,119,47,120,46,120,44,123,46,122,46,120,46,120,43,124,43,40,43,40,46,37,46,36,46,37,46,36,45,38,46,38,44,38,46,37,46,120,46,121,46,37,46,38,46,121,46,121,45,122,46,120,46,36,46,37,43,123,47,120,46,37,44,40,46,37,46,36,44,39,46,121,46,36,46,120,44,40,46,121,46,120,44,124,46,120,46,38,46,120,46,37,44,123,46,38,44,38,46,37,43,123,46,37,46,37,46,120,46,37,45,121,46,120,46,121,46,37,46,120,46,120,44,39,46,120,47,37,43,39,46,36,46,121,46,36,46,36,46,37,46,36,47,36,46,121,46,121,46,37,46,120,47,120,43,124,46,121,45,122,46,36,46,37,46,37,46,36,46,37,46,36,46,38,46,37,47,120,46,122,45,121,46,121,43,124,46,120,46,121,46,121,46,36,46,37,46,38,46,37,46,36,46,38,46,37,46,37,46,120,46,122,45,121,46,122,45,121,46,120,46,123,44,120,46,37,46,37,46,36,46,37,46,37,46,37,46,38,45,38,46,121,46,121,46,121,46,120,44,123,46,121,46,120,46,122,46,36,46,36,46,37,43,40,46,38,46,37,46,36,46,37,46,120,47,120,46,120,46,121,46,121,46,120,46,121,45,122,46,36,46,37,46,40,43,37,46,36,46,37,46,37,46,36,46,120,46,122,45,121,46,121,46,120,47,120,46,120,46,121,46,120,44,123,46,121,43,40,44,123,46,37,46,37,46,38,44,38,46,37,46,37,45,121,46,36,47,120,44,124,43,124,46,120,44,38,46,38,45,38,46,121,43,123,44,123,46,122,46,36,46,120,46,120,46,121,46,38,46,39,41,40,46,38,46,39,41,124,46,36,46,36,46,37,44,40,43,40,46,38,44,123,46,36,46,121,43,124,44,123,43,124,43,124,45,122,44,40,43,39,46,40,43,37,46,37,46,37,44,42,40,39,46,120,43,125,42,123,46,121,45,121,44,124,46,120,44,123,46,36,44,39,44,40,46,37,46,38,43,40,44,40,46,121,44,122,46,121,46,120,46,121,44,123,46,121,46,120,44,40,44,123,46,121,46,37,46,37,46,36,44,39,46,37,44,40,46,36,44,38,46,121,46,121,45,121,46,121,46,120,44,123,47,120,46,38,46,36,44,40,46,36,44,40,46,37,46,37,46,37,46,121,46,121,45,121,46,121,46,121,45,121,47,120,43,39,46,37,46,37,46,120,46,36,47,36,45,38,46,121,45,121,46,120,46,120,46,38,46,121,46,121,46,120,46,38,46,37,46,37,46,36,47,36,46,37,46,36,46,37,46,37,46,120,46,121,46,120,46,121,44,123,46,120,46,121,46,120,46,37,46,37,46,36,46,37,47,37,46,38,46,37,46,37,46,120,46,122,45,121,46,120,46,121,46,121,46,120,46,122,46,120,46,123,44,120,47,120,46,121,46,121,46,120,46,122,46,36,46,38,46,38,45,37,46,36,46,37,46,37,46,37,46,120,46,122,45,120,47,120,46,120,46,120,46,121,46,121,46,37,46,36,46,36,46,37,46,37,46,37,46,37,45,38,46,120,46,122,44,121,46,121,46,120,46,120,46,120,46,121,47,36,46,37,46,37,46,37,46,36,46,36,46,37,46,37,46,120,46,122,46,121,46,120,47,120,46,121,46,120,47,120,44,39,46,37,46,36,46,36,46,37,46,37,46,37,46,38,46};
const PROGMEM int aircon_off[] =  {2982,2000,0,2934,340,161,46,121,46,37,46,36,46,37,46,37,46,36,46,38,46,38,46,37,46,36,47,36,46,37,46,122,45,37,46,36,46,38,46,37,46,37,46,38,46,37,46,37,46,38,46,37,46,37,46,36,46,37,45,40,44,37,46,38,45,40,44,120,46,36,46,120,46,120,46,121,47,120,46,120,46,121,46,36,46,122,46,121,45,121,46,120,46,122,46,121,46,120,46,122,46,122,45,37,46,37,46,37,46,36,46,37,46,37,46,36,46,38,46,37,46,37,46,122,45,121,46,38,45,37,46,121,46,121,46,120,46,121,46,37,46,38,46,121,46,120,46,38,45,38,46,36,46,37,46,37,46,121,46,121,46,40,44,38,46,121,46,120,46,123,44,120,46,37,46,37,46,120,47,120,46,38,46,120,46,120,47,36,46,38,46,120,47,37,46,37,46,37,46,36,46,37,46,122,44,121,46,36,46,120,46,121,46,120,46,37,46,36,46,121,45,38,46,39,44,37,47,36,46,37,46,120,46,120,46,38,46,120,46,121,46,120,46,121,46,120,47,36,46,37,46,37,46,36,46,36,47,36,46,37,46,38,46,120,47,121,45,121,46,121,46,121,46,120,46,122,45,122,46,37,46,37,43,39,46,37,46,36,46,38,45,38,46,38,46,121,46,122,45,121,46,123,44,121,46,120,46,122,44,124,44,36,46,36,46,38,46,36,46,36,46,37,46,37,47,36,46,121,46,121,46,121,46,121,46,120,46,121,46,120,47,121,43,42,44,36,46,37,46,37,47,36,46,37,45,38,46,38,46,120,46,122,45,121,46,121,46,120,46,120,46,121,46,121,46,37,46,37,46,37,46,37,46,38,45,38,45,38,46,37,46,120,46,122,46,120,46,121,46,121,46,120,46,120,46,122,46,120,46,120,46,120,46,37,46,121,46,36,46,37,46,37,46,37,46,38,46,37,46,121,46,37,43,123,46,121,45,121,46,120,46,37,46,37,46,37,46,37,47,120,46,121,46,121,46,36,46,121,43,123,46,120,46,121,46,37,46,38,46,38,46,37,46,37,46,36,46,38,45,39,44,36,47,37,45,37,47,120,46,121,46,121,46,121,46,120,46,120,46,123,44,121,46,38,46,36,46,38,46,37,46,37,46,37,46,37,46,38,46,120,46,121,45,121,46,121,46,120,46,120,46,120,46,121,46,40,42,37,46,36,46,37,46,37,46,36,46,36,46,121,47,120,46,120,47,121,45,121,47,120,46,120,46,121,46,38,46,122,44,122,46,37,46,36,46,37,46,37,46,36,46,37,46,37,46,37,46,120,46,120,46,121,46,121,46,120,47,121,46,120,46,36,46,38,46,36,46,37,46,37,46,36,46,38,46,37,46,121,46,122,46,120,46,121,44,123,46,121,45,122,46,37,46,36,46,37,46,121,46,36,46,38,46,36,47,122,45,120,46,123,43,122,46,37,46,122,46,120,46,121,46,38,46,36,46,37,46,37,46,36,46,37,46,37,46,37,46,38,47,119,46,121,46,120,47,120,46,120,47,120,46,122,46,120,46,37,46,37,46,38,46,36,46,37,46,36,46,36,46,38,46,121,46,122,45,121,46,120,46,121,46,120,46,121,45,122,46,120,46,120,46,122,46,120,46,121,46,122,45,121,46,122,46,37,46,37,46,37,46,37,46,37,46,38,46,36,46,37,46,120,46,122,45,121,46,120,46,121,46,121,46,120,46,120,46,36,46,39,44,36,46,36,46,37,46,37,46,36,46,38,46,121,46,122,45,121,46,120,46,121,46,120,46,120,46,121,46,36,46,36,46,38,46,36,46,38,46,37,46,38,45,38,46,120,46,122,45,121,46,120,46,120,47,120,46,120,46,122,46,37,46,37,46,37,46,36,46,37,46,37,46,36,47,36,47};

//電気点灯IRデータ→メモリ点灯に変更
//全灯　const PROGMEM int light_on[] =  {202,101,564,102,154,50,154,50,51,55,47,50,51,56,47,50,51,50,52,50,154,49,51,50,52,55,46,55,47,55,47,50,52,50,154,55,46,55,47,50,154,50,51,50,51,51,50,51,51,50,52,50,52,54,47,50,51,55,47,50,52,50,51,50,52,55,46,50,52,55,47,50,153,50,154,50,154,50,51,50,154,50,154,47,55};
const PROGMEM int light_on[] =  {206,103,562,102,154,51,154,50,51,52,49,53,48,50,52,52,50,54,46,53,152,52,48,51,51,53,50,52,49,53,49,52,49,55,149,50,51,52,152,55,46,53,48,53,49,52,49,53,49,50,52,53,48,50,51,53,49,52,49,53,48,51,50,53,49,50,51,51,51,51,153,50,50,54,151,51,153,55,47,52,152,51,153,48,54};

//電気消灯IRデータ
const PROGMEM int light_off[] =  {207,100,564,103,154,50,155,50,52,50,52,50,52,47,54,50,52,50,51,50,154,49,51,50,52,50,52,50,52,50,51,50,51,50,154,50,154,50,52,50,52,50,52,50,51,50,51,50,52,50,52,50,52,50,51,50,52,50,52,50,52,50,51,50,52,49,52,47,157,50,51,50,52,50,154,50,154,50,51,50,154,50,154,48,54};

//一段階暗くするIRデータ→未使用に変更
//const PROGMEM int light_down[] =  {202,101,564,108,149,54,150,55,46,53,49,55,47,55,46,55,47,55,47,55,150,49,52,55,47,50,52,55,47,55,47,55,47,50,154,50,51,50,52,54,47,50,52,50,52,55,46,51,51,50,154,55,47,50,51,51,51,55,47,50,52,50,52,50,52,50,51,51,52,54,47,55,47,55,149,54,150,54,47,55,150,55,46,52,50};

//一段階明るくするIRデータ→未使用に変更
//const PROGMEM int light_up[] =  {206,100,564,102,155,50,154,50,51,51,51,50,52,50,51,50,51,50,52,55,150,49,51,50,52,49,52,50,52,50,51,50,52,47,157,50,51,50,51,55,47,55,47,49,52,50,52,50,154,50,51,56,46,55,46,51,50,55,47,55,46,51,50,55,47,51,50,51,51,50,51,55,47,55,149,51,153,55,47,55,46,55,150,52,50};

int last = 0;
unsigned long us = micros();
  
void setup() { 
  pinMode(output, OUTPUT);
  Serial.begin (9600);  //コンソール用シリアル定義
  mySerial.begin (9600);  //mp3 module用シリアル定義
  mp3_set_serial (mySerial);  //set softwareSerial for DFPlayer-mini mp3 module 
  delay(1);  //wait 1ms for mp3 module to set volume
  mp3_set_volume (30); //mp3 moduleの音量を３０（最大）に
  sensors.begin();
}


void send(int data[]) {  //エアコンIR制御
  int dataSize = 855;
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = pgm_read_word(data + cnt)*10;
    unsigned long us = micros();
    do {
      digitalWrite(output, 1 - (cnt&1)); 
      delayMicroseconds(8); 
      digitalWrite(output, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0);
  }
}

void send_l(int data[]) {  //照明IR制御
  int dataSize = 85;
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = pgm_read_word(data + cnt)*10;
    unsigned long us = micros();
    do {
      digitalWrite(output, 1 - (cnt&1)); 
      delayMicroseconds(8); 
      digitalWrite(output, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0);
  }
}


void loop() {
float Tc_100;  //浮動小数点型の宣言
  // call sensors.requestTemperatures() to issue a global temperature
  // request to all devices on the bus
  sensors.requestTemperatures(); // Send the command to get temperatures
  Tc_100=sensors.getTempCByIndex(0);
  Serial.println(Tc_100);
  Serial.print("aOFF");
  Serial.println(aOFF);
  Serial.print("aON:");
  Serial.println(aON);
//   delay(60000);
   delay(3000);
   
  if (Tc_100>27.5){
    if (aON==0){
  Serial.println("aircon_on");
  send(aircon_on);
  aON=1;
  aOFF=0;
    }
  }else if (Tc_100<26.5){
    if (aOFF==0){
  Serial.println("aircon_off");
   send(aircon_off);
  aON=0;
  aOFF=1;
    }  
  }

  if (Tc_100==0){
   delay(3000);
  mp3_play (4);
   delay(3000);
//   send_l(light_off);
   delay(3000);
  mp3_play (5);
   delay(3000);
   send_l(light_on);
   delay(3000);
   }   
   delay(3000);
}

